<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Posts relates</title>
 <link href="https://saeidamiri1.github.io/Test.github.io" rel="self"/>
 <link href="https://saeidamiri1.github.io/Test.github.io"/>
 <updated>2019-10-19T00:42:59-04:00</updated>
 <id>https://saeidamiri1.github.io/Test.github.io</id>
 <author>
   <name>Saeid Amiri</name>
   <email>saeid.amiri1@gmail.com</email>
 </author>

 
 <entry>
   <title>Multiple Regression via R and Python</title>
   <link href="https://saeidamiri1.github.io/Test.github.io/blog/2019/10/14/Regression-via-R-and-Python"/>
   <updated>2019-10-14T00:00:00-04:00</updated>
   <id>https://saeidamiri1.github.io/Test.github.io/blog/2019/10/14/Regression-via-R-and-Python</id>
   <content type="html">&lt;h1 id=&quot;data&quot;&gt;Data&lt;/h1&gt;
&lt;p&gt;To show how fit the multiple regression using R and Python, we consider the car data [car] which has the car specifications; HwyMPG, Model, etc,. We fit different regreesion models to predict Highway MPG using the car specifications.&lt;/p&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#import-data&quot;&gt;Import data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#preprocessing-data&quot;&gt;Preprocessing data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#select-variables&quot;&gt;Select variable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fit-model&quot;&gt;Fit model &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#run-of-codes&quot;&gt;Run of codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;import-data&quot;&gt;Import data&lt;/h2&gt;
&lt;h4 id=&quot;using-r&quot;&gt;Using R&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;car_data=read.csv2(&quot;https://raw.githubusercontent.com/saeidamiri1/saeidamiri1.github.io/master/public/data/cardata.csv&quot;)
names(car_data)
head(car_data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-python&quot;&gt;Using Python&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import pandas as pd
car_data = pd.read_csv(&quot;https://raw.githubusercontent.com/saeidamiri1/saeidamiri1.github.io/master/public/data/cardata.csv&quot;, delimiter=&quot;;&quot;, decimal=&quot;,&quot;)
car_data.columns
car_data.head(10)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;preprocessing-data&quot;&gt;Preprocessing data&lt;/h2&gt;
&lt;p&gt;Select the numerical variables to fit the simple regression model. The data have the missing values, so we run an imputuion procedure to fill the missiong values.&lt;/p&gt;

&lt;h4 id=&quot;using-r-1&quot;&gt;Using R&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Select numerical variables
v0=as.numeric(which(unlist(lapply(car_data, is.numeric))))
# Check there is any missing values 
car_data=car_data[,v0]
anyNA(car_data)
apply(is.na(car_data),2,sum)
# Run Imputation procedure
library(mice)
m_car_data&amp;lt;-mice(car_data,print=FALSE)
m_car_data&amp;lt;-complete(m_car_data)
anyNA(m_car_data$imp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-python-1&quot;&gt;Using Python&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Select numerical variables
car_data=car_data.select_dtypes(exclude=['object'])
# Check there is any missing values 
car_data.isnull().any().any()
car_data.apply(lambda x: x.isnull().any().any(), axis=0)
# Run Imputation procedure
import numpy as np
from sklearn.experimental import enable_iterative_imputer
from sklearn.impute import IterativeImputer
imp = IterativeImputer(missing_values=np.NaN)
imp.fit(car_data)
m_car_data=pd.DataFrame(imp.transform(car_data))
m_car_data.columns=car_data.columns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;select-variables&quot;&gt;Select variables&lt;/h2&gt;
&lt;p&gt;To select variable, calculate the correlation&lt;/p&gt;

&lt;h4 id=&quot;using-r-2&quot;&gt;Using R&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cor(m_car_data,m_car_data$HwyMPG,)
cor(m_car_data$HwyMPG,m_car_data$GasTank)
cor(m_car_data$HwyMPG,m_car_data$Rev)

plot(car_data[,c('HwyMPG','GasTank','Rev')])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-python-2&quot;&gt;Using Python&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;m_car_data.corr().HwyMPG
m_car_data.loc[:,['HwyMPG','Length']].corr()
m_car_data.loc[:,['HwyMPG','Width']].corr()

import seaborn as sns
import matplotlib.pyplot as plt
aa=pd.plotting.scatter_matrix(m_car_data.loc[:,['HwyMPG','GasTank','Rev']])
plt.show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;fit-model&quot;&gt;Fit model&lt;/h2&gt;
&lt;h3 id=&quot;using-r-3&quot;&gt;Using R&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;model_r=lm(HwyMPG ~ Rev, data=m_car_data)
summary(model_r)$r.squared

model_g=lm(HwyMPG ~ GasTank, data=m_car_data)
summary(model_g)$r.squared

model_rg=lm(HwyMPG ~ Rev+GasTank, data=m_car_data)
summary(model_rg)$r.squared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-python-3&quot;&gt;Using Python&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from sklearn.linear_model import LinearRegression
lr = LinearRegression(normalize=True)
model_r=lr.fit(m_car_data.loc[:,['Rev']], m_car_data.HwyMPG)
model_r_pred = model_r.predict(m_car_data.loc[:,['Rev']])
from sklearn.metrics import r2_score
r2_score(m_car_data.HwyMPG, model_r_pred)

model_g=lr.fit(m_car_data.loc[:,['GasTank']], m_car_data.HwyMPG)
model_g_pred= model_g.predict(m_car_data.loc[:,['GasTank']])
r2_score(m_car_data.HwyMPG,model_g_pred)

model_rg=lr.fit(m_car_data.loc[:,['Rev','GasTank']], m_car_data.HwyMPG)
model_rg_pred = model_rg.predict(m_car_data.loc[:,['Rev','GasTank']])
r2_score(m_car_data.HwyMPG, model_rg_pred )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;run-of-codes&quot;&gt;Run of codes&lt;/h2&gt;

&lt;iframe src=&quot;https://saeidamiri1.github.io/source/post/2019-10-14-Regression-via-R-and-Python.html&quot; height=&quot;600&quot; width=&quot;100%&quot;&gt;
 &lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[car] Consumer Reports: The 1993 Cars - Annual Auto Issue (April 1993), Yonkers, NY: Consumers Union.&lt;/p&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;p&gt;Copyright (c) 2019 Saeid Amiri&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cheat Sheet of Numpy,  Panda and python core</title>
   <link href="https://saeidamiri1.github.io/Test.github.io/blog/2019/10/05/cheatsheet-numpy-panda"/>
   <updated>2019-10-05T00:00:00-04:00</updated>
   <id>https://saeidamiri1.github.io/Test.github.io/blog/2019/10/05/cheatsheet-numpy-panda</id>
   <content type="html">&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#primer&quot;&gt;Primer&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#libraries&quot;&gt;Libraries&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#starting&quot;&gt;Starting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#mathematical-operations&quot;&gt;Mathematical operations&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#built-in-Constants&quot;&gt;Built-in Constants&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#type&quot;&gt;Type&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#lists&quot;&gt;Lists&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#dictionary&quot;&gt;Dictionary&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#built-in-function&quot;&gt;Built-in function&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#user-function&quot;&gt;User Function&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#iterates&quot;&gt;Iterates&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#boolean-comparisons&quot;&gt;Boolean Comparisons&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#numpy&quot;&gt;Numpy&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#arrays&quot;&gt;Arrays&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#random&quot;&gt;Random&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#o\s&quot;&gt;O\S&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inspecting-arrays&quot;&gt;Inspecting arrays&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sorting&quot;&gt;sorting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#reshaping&quot;&gt;Reshaping&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#concatenate&quot;&gt;Concatenate&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#copying&quot;&gt;Copying&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#adding/removing-elements&quot;&gt;Adding/Removing Elements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indexing&quot;&gt;Indexing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#slicing&quot;&gt;Slicing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#subsetting&quot;&gt;Subsetting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vector-Math&quot;&gt;Vector Math&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#aggregate-functions&quot;&gt;Aggregate Functions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pandas&quot;&gt;Pandas &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#create-data-frame-and-series&quot;&gt;Create Data frame and series&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#i/o&quot;&gt;I/O&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#inspecting-arrays&quot;&gt;Inspecting arrays&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#sorting&quot;&gt;sorting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#adding/removing-elements&quot;&gt;Adding/Removing Elements&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#missing&quot;&gt;Missing &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indexing&quot;&gt;Indexing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#subsetting&quot;&gt;Subsetting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#group-by&quot;&gt;Group by&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#apply&quot;&gt;Apply &lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#join/Combine&quot;&gt;Join/Combine&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#aggregate-functions&quot;&gt;Aggregate Functions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;primer&quot;&gt;Primer&lt;/h1&gt;

&lt;h2 id=&quot;libraries&quot;&gt;Libraries&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install numpy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Install library&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install git+https://github.com/mwaskom/seaborn.git&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Install from GitHub&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import numpy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;load library&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;starting&quot;&gt;starting&lt;/h2&gt;

&lt;p&gt;By putting # infront line, Python ignores running the rest.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x=1 # Python ignore&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Python ignores running after #&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import os&lt;/code&gt; &lt;br /&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;os.getcwd()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See the working directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;os.chdir()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Change  the working directory&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;mathematical-operations&quot;&gt;Mathematical operations&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 + 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Addition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 - 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Subtraction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 / 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Division&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 * 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Multiplication&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 ** 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Power&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x += 1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Assign the value of x + 1 to x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x -= 1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Assign the value of x - 1 to x&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;built-in-constants&quot;&gt;Built-in Constants&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Absence of a value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The bool type false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The bool type true&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;type&quot;&gt;Type&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert the string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert the integer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;float()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert the floating&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bool()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert the boolen&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l = list()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Assign an empty list to l&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l = [3,2]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create list and assgn 3 and 2 to it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l[0]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the first value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l[-1]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the last value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l[-4:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return that last 4 items.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l[1:4]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return subset containing the second till  fourth values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l[1::3]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return every third items starting from l[1]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l.append(1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Append the value 1 to the end of l&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l+[1]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Append the value 1 to the end of l&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l.sort()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sort l and replace original with it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l.reverse()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sort reversely the items in l&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l.remove(a)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Removes the first item equals to a.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l.pop(2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Restun the second item and drop it from l&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[i for i in range(1,100) if i%2==0]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generate list of even number between 1 and 100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;l= [1, &quot;&quot;, 3]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Creat a list with missing value.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;dictionary&quot;&gt;Dictionary&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d={&quot;weight&quot;:2.4, &quot;height&quot;:15}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Creat a dictionary with keys “weight” and “height”, and their corresponding values of 2.4, 15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d[&quot;weight&quot;]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return values corrsponding “weight”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d.keys()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the keys from d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d.values()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the values from d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d.items()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return  (key, value) pairs from d&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;built-in-function&quot;&gt;Built-in function&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;len(x)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the number of elements in x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;min(x)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the min of the values of x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sum(x)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the sum of the values of x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type(x)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return type of the values of x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;range(3,10)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generate a series of number from a number (3) to another number (10) with specific increment&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;user-function&quot;&gt;User Function&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def name (argument):&lt;/code&gt; &lt;br /&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; &lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return output&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a function&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name = lambda arguments: script&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create one line function&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if state1:&lt;/code&gt;&lt;br /&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;script1&lt;/code&gt; &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;elif x &amp;lt; 0:&lt;/code&gt;&lt;br /&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;script2&lt;/code&gt; &lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;else:&lt;/code&gt;&lt;br /&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;script3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test state1 and state2, and run script corresponding to the correct statement, otherwise run script3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;iterates&quot;&gt;Iterates&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for value in obj:&lt;/code&gt;&lt;br /&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Iterate the code for each value in obj&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while cond:&lt;/code&gt;&lt;br /&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Run the code until reach to condion&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;boolean-comparisons&quot;&gt;Boolean Comparisons&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x == 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is equal to 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x != 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is not equal to 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x &amp;lt; 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is less than 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x &amp;lt;= 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is less than or equal to 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x &amp;gt; 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is greater than 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x &amp;gt;= 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is greater than or equal to 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x == 2) or (y == 1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is equal to 5 or y is equal to 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x == 2) | (y == 1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is equal to 5 or y is equal to 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x == 2) and  (y == 1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is equal to 5 and y is equal to 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(x == 2) &amp;amp; (y == 1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Test whether x is equal to 5 and  y is equal to 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3 in l&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Checks whether the value 3 exists in the  l&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;numpy&quot;&gt;Numpy&lt;/h1&gt;

&lt;p&gt;Numpy (NUMerical PYthon) provides very useful arrays structure to work with data.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import numpy as np&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pips install numpy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python3 -m pip install --upgrade  numpy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;arrays&quot;&gt;Arrays&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.array([1,2,3])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;One dimensional array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.array([(1,2,3),(4,5,6)])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Two dimensional array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[i]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The ith element&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[i:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The ith row&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[i][j]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The ith and jth element, the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;arr[i,j]&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.full((2,1),2.2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;2x1 array with all values 2.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.linspace(0, 1, 10)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.eye(3)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A diagonal array of size 3x3 (Identity matrix)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.zeros(3)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An array of length 3 with all values 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.ones((4,2))&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An array of size 4x2 with all values 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.arange(1,14,4)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;An 1D array from 1 to 14 with step 4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;random&quot;&gt;Random&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.random.rand(4,2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generates a 4x2  array of random number from uniform&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.random.rand(4,2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generates a 4x2 array  of random number from standard normal&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.random.randint(low=1,high=20, size=(2,3))&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generates a 2x3 array of random ints between 1–20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.random.choice(arr,size=s,replace=True,p=pr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Resamples of size s from arr acording probability pr&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;os&quot;&gt;O\S&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.savetxt('file.txt',arr,delimiter=' ')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Writes to a text file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.savetxt('file.csv',arr,delimiter=',')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Writes to a CSV file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.loadtxt('file.txt')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Loads from a text file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.genfromtxt('file.csv',delimiter=',')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Loads from a CSV file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.save('file_of_arr.npy ', arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Saves  array into a file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.savez('file_of_arr.npz', arr1, arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Saves  array into a file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.load('my_array.npy')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Loads arrays&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;inspecting-arrays&quot;&gt;Inspecting arrays&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.dtype&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns type of elements in array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.size&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns number of elements in array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;len(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Length of array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.shape&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns dimensions of arr&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.astype(dtype)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert arr elements to type dtype&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.tolist()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert arr to a Python list&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sorting&quot;&gt;Sorting&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.sort()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sort elements of arr&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.sort(axis=0)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sorts elements of axis=0 of arr&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;reshaping&quot;&gt;Reshaping&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.reshape(4,3)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Reshapes arr to 4x3 without changing data&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.resize((4,3))&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Changes arr shape to 4x3 and fills new values with 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.T&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Transposes arr&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;concatenate&quot;&gt;Concatenate&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.concatenate(arr1,arr2,axis=0)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;concatenate arr2 to arr1 along  the axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.hstack((arr1,arr2))&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Stack arrays horizontally (column wise)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.vstack((arr1,arr2))&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Stack arrays vertically (row wise)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;copying&quot;&gt;Copying&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr2 = arr1.view()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a view of the array with the same data&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.copy(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a copy of aar&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr2 = arr1.copy()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a deep copy of the array&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;addingremoving-elements&quot;&gt;Adding/Removing Elements&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.append(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Append arr2 to arr1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.insert(arr, 1, 10)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Insert 10 on index 1 items&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.delete(a,2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Delete element on index 1 from array&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;indexing&quot;&gt;Indexing&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[2]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the element at index 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[2]=3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Assigns 3 to the element on index 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[2,3]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the array element on index [2,3]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[2,3]=10&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Assigns 3 to the element on index [2,3]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;slicing&quot;&gt;Slicing&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[:2]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the elements at indices 0,1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[2:4]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the elements at indices 2,3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[0:2,3]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the elements on rows 0,1 at column 3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[:,1]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the elements on column 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[[1,2],[2,3]]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the elements at indices [1,3] and [2,3]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;subsetting&quot;&gt;Subsetting&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr&amp;lt;2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns a boolen array, True for arr&amp;lt;2 and False for the rest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(arr1&amp;lt;2) &amp;amp; (arr2&amp;gt;3)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns a boolen array, True for (arr1&amp;lt;3) &amp;amp; (arr2&amp;gt;5) and False for the rest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[arr&amp;lt;2]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Select array with elements smaller than 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[~(arr&amp;lt;2)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Select array with elements not smaller than 2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vector-math&quot;&gt;Vector Math&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.add(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Elementwise add arr2 to arr1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.subtract(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Elementwise subtract arr2 from arr1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.multiply(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Elementwise multiply arr1 by arr2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.divide(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Elementwise divide arr1 by arr2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.power(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Elementwise raise arr1 raised to the power of arr2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.array_equal(arr1,arr2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns True if the arrays have the same elements and shape&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.sqrt(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Square root of each element in the array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.sin(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sine of each element in the array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.log(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Natural log of each element in the array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.abs(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Absolute value of each element in the array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.ceil(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rounds up to the nearest int&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.floor(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rounds down to the nearest int&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.round(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rounds to the nearest int&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;aggregate-functions&quot;&gt;Aggregate Functions&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.min()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns minimum value of arr&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.max(axis=0)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns maximum value of specific axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.mean(arr,axis=0)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns mean of specific axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.median(arr,axis=0)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns median of  specific axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.sum()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns sum of arr&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.var(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the variance of array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.std(arr,axis=1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the standard deviation of specific axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.quantile(arr,q=(q1,q2,..), axis=1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the (q1,q2, ….) quantiles of specific axis&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.corrcoef()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns correlation coefficient of array&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;pandas&quot;&gt;Pandas&lt;/h1&gt;

&lt;p&gt;Pandas is built for working with data set.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import pandas as pd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 install pandas&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python3 -m pip install --upgrade  pandas&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;create-data-frame-and-series&quot;&gt;Create Data frame and series&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.DataFrame(matrix, column=)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create data frame from matrix.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.DataFrame(dict)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create data frame from a dict, keys would be used as the name of columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.Series(list)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a series from a list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.index = pd.date_range('2000/1/1', periods=df.shape[0])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Add a date index to the data frame&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;io&quot;&gt;I/O&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_csv(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Load CSV file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_table(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Load from a delimited text file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_excel(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Load from an Excel file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_sql(query, connection_object)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Load from a SQL table/database&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_json(json_string)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Load from Read JSON formatted file s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_html(url)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a data from from an html URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.read_clipboard()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a data frame from  the contents of your clipboard&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.to_csv(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Save df as  a CSV file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.to_excel(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Save df as an Excel file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.to_sql(table_name, connection_object)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Save df to a SQL table&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.to_json(filename)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Save df as a file in JSON format&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;inspecting-arrays-1&quot;&gt;Inspecting arrays&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.dtype&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns type of elements in array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.size&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns number of elements in array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;len(arr)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Length of array&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.shape&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns dimensions of arr&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.astype(dtype)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert arr elements to type dtype&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.tolist()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Convert arr to a Python list&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr.value_counts(dropna=False)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;View unique values and counts&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.head(l)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the first l rows of the DataFrame&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.tail(l)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return  the last l rows of the DataFrame&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.shape&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the number of rows and columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.info()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return index, datatype, and memory information&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.describe()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return the summary statistics of numerical columns&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sorting-1&quot;&gt;Sorting&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sort_values(col)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sort data frame values by col in ascending order&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sort_values(col,ascending=False)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sort data frame values by col in descending order&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sort_values([col1,col2],ascending=[True,False])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;data frame values by col1 in ascending order then col2 in descending order&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;addingremoving-elements-1&quot;&gt;Adding/Removing Elements&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.columns = ['name1','name2']&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Add new name to  columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.rename(columns={'old_name': 'new_ name'})&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.set_index('colu')&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Change the index to the given column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s.replace([1,2],['two','one'])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace 1 and 2 with  ‘two’ and ‘one’, respectively&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;missing&quot;&gt;Missing&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.isnull()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find the null values, True for the null&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.notnull()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Opposite to  pd.isnull()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.dropna()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Drop all rows that contain null values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.dropna(axis=1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Drop all columns that contain null values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.dropna(axis=1,thresh=n)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Keep only the column with at least n non null values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.fillna(x)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace all null values with x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.fillna([‘A’:0,‘B’:0])&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace all null values in column ‘A’, and ‘B’, with 0, 1 respectively.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s.fillna(s.mean())&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace all null values with the mean or any other statistics you define&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;indexing-1&quot;&gt;Indexing&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[col]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns column with label col as Series&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[[col1, col2]]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns columns corresponding  col1, col2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.iloc[i,:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The (i-1)th row&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.iloc[i,j]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The (i-1)th and (j-1)th element&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s.iloc[i]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return elements in position (i-1) by position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s.loc['index']&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return elements correspondingthe index&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;subsetting-1&quot;&gt;Subsetting&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[df[col] &amp;lt; 1]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return element less than 1 in column col&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[(df[col] &amp;gt; 0.5) &amp;amp; (df[col] &amp;lt; 1)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Return 0.5&amp;lt; element &amp;lt; 1 in column col&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;group-by&quot;&gt;Group by&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.groupby(col)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Group data frame based on col.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.groupby(col).mean()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Calculate mean after grouping based on col.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.groupby(col1).agg(fun)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Group the data frame based on col and run function on it.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.pivot_table(index=col1,values=[col2,col3],aggfunc=mean)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a pivot table using index of col1 and calculates the mean (or any other function) of col2 and col3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;apply&quot;&gt;Apply&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.apply(fun)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Apply the function fun across each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.apply(np.max,axis=1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Apply the function fun across each row&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;joincombine&quot;&gt;Join/Combine&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df1.append(df2)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Add the rows in df1 to the end of df2 (columns should be identical)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pd.concat([df1, df2],axis=1)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Add the columns in df1 to the end of df2 (rows index should be identical)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;aggregate-functions-1&quot;&gt;Aggregate Functions&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.describe()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Summary statistics for numerical columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.count()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the number of non-null values in each DataFrame column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.min()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the minimum in each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.max()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the maximum in each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.mean()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the mean in each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.median()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the median in each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.std()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the standard deviation in each column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.corr()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the correlation between columns&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[sw] https://swcarpentry.github.io/sql-novice-survey/ &lt;br /&gt;
[dpo] https://docs.python.org/3.7/library/sqlite3.html &lt;br /&gt;
[sw2] https://swcarpentry.github.io/sql-novice-survey/10-prog/index.html &lt;br /&gt;
[gc] https://github.com/CoreyMSchafer/code_snippets/tree/master/Python-SQLite &lt;br /&gt;
[dor] https://datacarpentry.org/R-ecology-lesson/05-r-and-databases.html &lt;br /&gt;
[wdc] https://www.datacamp.com/community/tutorials/sqlite-in-r &lt;br /&gt;
[sw3] https://swcarpentry.github.io/sql-novice-survey/11-prog-R/index.html &lt;br /&gt;
[w3]  https://www.w3schools.com/sql/sql_create_table.asp &lt;br /&gt;
[wt] https://www.techonthenet.com/sql/index.php &lt;br /&gt;
[qlt] https://www.sqlitetutorial.net &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;p&gt;Copyright (c) 2019 Saeid Amiri and Leila Alimehr&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cheatsheet for R, Python, and Matlab</title>
   <link href="https://saeidamiri1.github.io/Test.github.io/blog/2019/05/08/R-Python-Matlab"/>
   <updated>2019-05-08T00:00:00-04:00</updated>
   <id>https://saeidamiri1.github.io/Test.github.io/blog/2019/05/08/R-Python-Matlab</id>
   <content type="html">&lt;h1 id=&quot;r-python-matlab-basics&quot;&gt;R-Python-Matlab (Basics)&lt;/h1&gt;
&lt;p&gt;A brief cheatsheet for those who use R daily, and use other script programing languages, Python and Matlab, occasionally.&lt;/p&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#arithmetic-operators&quot;&gt;Arithmetic Operators&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-function&quot;&gt;Basic function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#function&quot;&gt;Function&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#round&quot;&gt;Round&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#trigonometry&quot;&gt;Trigonometry&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#logical-operators&quot;&gt;Logical Operators&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data-structure&quot;&gt;Data structure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data-frame&quot;&gt;Data frame&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#finding&quot;&gt;Finding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#missing&quot;&gt;Missing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Set-operator&quot;&gt;Set operator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conditional-operator&quot;&gt;Conditional operator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#loop&quot;&gt;Loop&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#summary-statistics&quot;&gt;Summary statistics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#random-number&quot;&gt;Random Number&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sequences&quot;&gt;Sequences&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#repeating&quot;&gt;Repeating&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#working-directory&quot;&gt;Working directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;arithmetic-operators&quot;&gt;Arithmetic Operators&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;x&amp;lt;-c &lt;br /&gt; x=c&lt;/td&gt;
      &lt;td&gt;x=c&lt;/td&gt;
      &lt;td&gt;x=c&lt;/td&gt;
      &lt;td&gt;define x and assign c to it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x+y&lt;/td&gt;
      &lt;td&gt;x+y&lt;/td&gt;
      &lt;td&gt;x+y&lt;/td&gt;
      &lt;td&gt;addition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x-y&lt;/td&gt;
      &lt;td&gt;x-y&lt;/td&gt;
      &lt;td&gt;x-y&lt;/td&gt;
      &lt;td&gt;subtraction&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x*y&lt;/td&gt;
      &lt;td&gt;x*y&lt;/td&gt;
      &lt;td&gt;x*y&lt;/td&gt;
      &lt;td&gt;multiplication&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x/y&lt;/td&gt;
      &lt;td&gt;x/y&lt;/td&gt;
      &lt;td&gt;x/y&lt;/td&gt;
      &lt;td&gt;division&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x^y&lt;/td&gt;
      &lt;td&gt;x**y&lt;/td&gt;
      &lt;td&gt;x.^y&lt;/td&gt;
      &lt;td&gt;power&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x%/%y&lt;/td&gt;
      &lt;td&gt;x%y&lt;/td&gt;
      &lt;td&gt;rem(x,y)&lt;/td&gt;
      &lt;td&gt;Reminder&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;basic-function&quot;&gt;Basic function&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;sqrt(x)&lt;/td&gt;
      &lt;td&gt;math.sqrt(x)&lt;/td&gt;
      &lt;td&gt;sqrt(x)&lt;/td&gt;
      &lt;td&gt;square root&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log(x)&lt;/td&gt;
      &lt;td&gt;math.log(x)&lt;/td&gt;
      &lt;td&gt;log(x)&lt;/td&gt;
      &lt;td&gt;logarithm base e&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;log10(x)&lt;/td&gt;
      &lt;td&gt;math.log10(x)&lt;/td&gt;
      &lt;td&gt;log10()&lt;/td&gt;
      &lt;td&gt;logarithm base 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exp(x)&lt;/td&gt;
      &lt;td&gt;math.exp(x)&lt;/td&gt;
      &lt;td&gt;exp(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;function&quot;&gt;Function&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;name&amp;lt;-function(arguments){&lt;br /&gt;  script &lt;br /&gt;return(output)&lt;br /&gt;}&lt;/td&gt;
      &lt;td&gt;def name (arguments):&lt;br /&gt;    script&lt;br /&gt;     return output&lt;/td&gt;
      &lt;td&gt;function [returns]=name(argument):&lt;br /&gt;    script&lt;br /&gt;    returns=output&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;round&quot;&gt;Round&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;round()&lt;/td&gt;
      &lt;td&gt;round()&lt;/td&gt;
      &lt;td&gt;round()&lt;/td&gt;
      &lt;td&gt;round&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ceil()&lt;/td&gt;
      &lt;td&gt;math.ceil()&lt;/td&gt;
      &lt;td&gt;ceil()&lt;/td&gt;
      &lt;td&gt;round up&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;floor()&lt;/td&gt;
      &lt;td&gt;math.floor()&lt;/td&gt;
      &lt;td&gt;floor()&lt;/td&gt;
      &lt;td&gt;round down&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;trigonometry&quot;&gt;Trigonometry&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;sin(x)&lt;/td&gt;
      &lt;td&gt;math.sin(x)&lt;/td&gt;
      &lt;td&gt;sin(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;asin(x)&lt;/td&gt;
      &lt;td&gt;math.asin(x)&lt;/td&gt;
      &lt;td&gt;asin(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;logical-operators&quot;&gt;Logical Operators&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;FALSE&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TRUE&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a &amp;amp; b&lt;/td&gt;
      &lt;td&gt;a &amp;amp; b&lt;/td&gt;
      &lt;td&gt;a &amp;amp; b&lt;/td&gt;
      &lt;td&gt;AND&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a|b&lt;/td&gt;
      &lt;td&gt;a|b&lt;/td&gt;
      &lt;td&gt;a|b&lt;/td&gt;
      &lt;td&gt;OR&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;!a&lt;/td&gt;
      &lt;td&gt;not a&lt;/td&gt;
      &lt;td&gt;~a&lt;/td&gt;
      &lt;td&gt;Not&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xor(a,b)&lt;/td&gt;
      &lt;td&gt;a!=b&lt;/td&gt;
      &lt;td&gt;xor(a,b)&lt;/td&gt;
      &lt;td&gt;Logical exclusive OR&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x&amp;amp;&amp;amp;y&lt;/td&gt;
      &lt;td&gt;and&lt;/td&gt;
      &lt;td&gt;x&amp;amp;&amp;amp;y&lt;/td&gt;
      &lt;td&gt;Short-circuit FALSE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;||&lt;/td&gt;
      &lt;td&gt;or&lt;/td&gt;
      &lt;td&gt;||&lt;/td&gt;
      &lt;td&gt;Short-circuit TRUE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;any(x,y)&lt;/td&gt;
      &lt;td&gt;any([x,y])&lt;/td&gt;
      &lt;td&gt;any(x,y)&lt;/td&gt;
      &lt;td&gt;TRUE if any element is TRUE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;all(a,b)&lt;/td&gt;
      &lt;td&gt;all([x,y])&lt;/td&gt;
      &lt;td&gt;all(x,y)&lt;/td&gt;
      &lt;td&gt;TRUE if all element is TRUE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;data-structure&quot;&gt;Data structure&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;vec=c(x,y,z)&lt;/td&gt;
      &lt;td&gt;vec=np.array([[x, y, z]])&lt;/td&gt;
      &lt;td&gt;vec=[x y z]&lt;/td&gt;
      &lt;td&gt;vector&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;vec[i]&lt;/td&gt;
      &lt;td&gt;vec[i]&lt;/td&gt;
      &lt;td&gt;cev(i)&lt;/td&gt;
      &lt;td&gt;call the ith  element&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;t(c(x,y,z))&lt;/td&gt;
      &lt;td&gt;np.array([[x, y, z]]).T&lt;/td&gt;
      &lt;td&gt;[x y z]’&lt;/td&gt;
      &lt;td&gt;transpose of vector&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mat=matrix(c(x,y,z,w),ncol=2)&lt;/td&gt;
      &lt;td&gt;mat=np.array([[x, y], [z,w]])&lt;/td&gt;
      &lt;td&gt;mat=[x y, z w]&lt;/td&gt;
      &lt;td&gt;matrix&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;matrix(0,x,y)&lt;/td&gt;
      &lt;td&gt;zeros(x,y)&lt;/td&gt;
      &lt;td&gt;zeros(x,y)&lt;/td&gt;
      &lt;td&gt;Zero x*y matrix&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dim(mat)&lt;/td&gt;
      &lt;td&gt;mat.shape&lt;/td&gt;
      &lt;td&gt;size(mat)&lt;/td&gt;
      &lt;td&gt;size of matrix&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;diag(x)&lt;/td&gt;
      &lt;td&gt;np.diag(x)&lt;/td&gt;
      &lt;td&gt;diag(x)&lt;/td&gt;
      &lt;td&gt;diagonal matrix&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mat[i,]&lt;/td&gt;
      &lt;td&gt;mat[i-1,]&lt;/td&gt;
      &lt;td&gt;mat(i,:)&lt;/td&gt;
      &lt;td&gt;call the ith  row&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mat[,j]&lt;/td&gt;
      &lt;td&gt;mat[,j-1]&lt;/td&gt;
      &lt;td&gt;mat(:,j)&lt;/td&gt;
      &lt;td&gt;call the ith  column&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rbind(mat1,mat2)&lt;/td&gt;
      &lt;td&gt;np.concatenate(mat1,mat2,axis=0)&lt;/td&gt;
      &lt;td&gt;[mat1;mat2]&lt;/td&gt;
      &lt;td&gt;combine by row&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cbind(mat1,mat2)&lt;/td&gt;
      &lt;td&gt;np.concatenate(mat1,mat2,axis=1)&lt;/td&gt;
      &lt;td&gt;[mat1,mat2]&lt;/td&gt;
      &lt;td&gt;combine by column&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;data-frame&quot;&gt;Data frame&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;df=data.frame()&lt;/td&gt;
      &lt;td&gt;df=pd.DataFrame()&lt;/td&gt;
      &lt;td&gt;ds = mat2dataset(X)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;apply(df, 2, FUN)&lt;/td&gt;
      &lt;td&gt;df.apply(FUN, axis=1)&lt;/td&gt;
      &lt;td&gt;varfun(FUN,ds)&lt;/td&gt;
      &lt;td&gt;Run function on columns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;apply(df, 1, FUN)&lt;/td&gt;
      &lt;td&gt;df.apply(FUN, axis=0)&lt;/td&gt;
      &lt;td&gt;varfun(FUN,ds)&lt;/td&gt;
      &lt;td&gt;Run function on rows&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;df = pd.DataFrame([[4, 4], [5, 5]])
df.apply(lambda x: x.mean(), axis=0)
df.apply(lambda x: x.mean(), axis=1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;finding&quot;&gt;Finding&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;which(x==a)&lt;/td&gt;
      &lt;td&gt;np.where(x == a)&lt;/td&gt;
      &lt;td&gt;find(x == a)&lt;/td&gt;
      &lt;td&gt;Check the condition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;which.max(x)&lt;/td&gt;
      &lt;td&gt;np.where(x==np.max(x))&lt;/td&gt;
      &lt;td&gt;find(x == max(x))&lt;/td&gt;
      &lt;td&gt;Find maximum&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;which.min(x)&lt;/td&gt;
      &lt;td&gt;np.where(x==np.min(x))&lt;/td&gt;
      &lt;td&gt;find(x == min(x))&lt;/td&gt;
      &lt;td&gt;Find minimum&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;missing&quot;&gt;Missing&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;NA&lt;/td&gt;
      &lt;td&gt;np.nan&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Missing&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;np.nan&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Not a number&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Inf&lt;/td&gt;
      &lt;td&gt;‘inf’&lt;/td&gt;
      &lt;td&gt;Inf&lt;/td&gt;
      &lt;td&gt;infinity&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;is.na(x)&lt;/td&gt;
      &lt;td&gt;np.isnan(x)&lt;/td&gt;
      &lt;td&gt;isnan(x)&lt;/td&gt;
      &lt;td&gt;Test whether it na&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;anyNA(X)&lt;/td&gt;
      &lt;td&gt;x.isnull().any().any()&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;sum(isnan(x)&amp;gt;1&lt;/td&gt;
      &lt;td&gt;Test whether there is any na&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;set-operator&quot;&gt;Set operator&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;unique(x)&lt;/td&gt;
      &lt;td&gt;np.unique(x)&lt;/td&gt;
      &lt;td&gt;unique(x)&lt;/td&gt;
      &lt;td&gt;find unique value&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;intersect(x,y)&lt;/td&gt;
      &lt;td&gt;x.intersectionf(y)&lt;/td&gt;
      &lt;td&gt;intersect(x,y)&lt;/td&gt;
      &lt;td&gt;find itersect value&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;setdiff(x,y)&lt;/td&gt;
      &lt;td&gt;x-y&lt;/td&gt;
      &lt;td&gt;setdiff(x,y)&lt;/td&gt;
      &lt;td&gt;difference of set&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;see below&lt;/td&gt;
      &lt;td&gt;x.symmetric_difference(y)&lt;/td&gt;
      &lt;td&gt;setxor(x,y)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;set exclusion&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;is.element(c,x)&lt;br /&gt; c%in%x&lt;/td&gt;
      &lt;td&gt;np.isin(c,x)&lt;/td&gt;
      &lt;td&gt;ismemner(c,x)&lt;/td&gt;
      &lt;td&gt;True if x includes c&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setxor &amp;lt;- function(x,y) setdiff(union(x,y), intersect(x,y))&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;conditional-operator&quot;&gt;Conditional operator&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;if (condition){&lt;br /&gt;dd&lt;br /&gt;}&lt;/td&gt;
      &lt;td&gt;if condition : &lt;br /&gt;    codes&lt;/td&gt;
      &lt;td&gt;if condition &lt;br /&gt;   code &lt;br /&gt; end&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ifelse&lt;/td&gt;
      &lt;td&gt;elif&lt;/td&gt;
      &lt;td&gt;elseif&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;else&lt;/td&gt;
      &lt;td&gt;else&lt;/td&gt;
      &lt;td&gt;else&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;loop&quot;&gt;loop&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;for (i in indices){ &lt;br /&gt; codes &lt;br /&gt;}&lt;/td&gt;
      &lt;td&gt;for i in indices: &lt;br /&gt;   codes&lt;/td&gt;
      &lt;td&gt;for i=indices &lt;br /&gt;   codes &lt;br /&gt;  &lt;br /&gt; end&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;summary-statistics&quot;&gt;Summary statistics&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;mean(x)&lt;/td&gt;
      &lt;td&gt;np.mean(x)&lt;/td&gt;
      &lt;td&gt;mean(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;median(x)&lt;/td&gt;
      &lt;td&gt;np.median(x)&lt;/td&gt;
      &lt;td&gt;median(x)&lt;/td&gt;
      &lt;td&gt;calculate sample mdeian&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var(x)&lt;/td&gt;
      &lt;td&gt;np.var(x)&lt;/td&gt;
      &lt;td&gt;var(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sd(x)&lt;/td&gt;
      &lt;td&gt;np.std(x)&lt;/td&gt;
      &lt;td&gt;std(x)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cov(x,y)&lt;/td&gt;
      &lt;td&gt;np.cov(x,y)&lt;/td&gt;
      &lt;td&gt;cov(x,y)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;corr(x,y)&lt;/td&gt;
      &lt;td&gt;np.corrcoef(x,y)&lt;/td&gt;
      &lt;td&gt;corr(x,y)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;random-number&quot;&gt;Random number&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;runif(n,a,b)&lt;/td&gt;
      &lt;td&gt;np.random.uniform(a,b,n)&lt;/td&gt;
      &lt;td&gt;unifrnd(a,b,1,n)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rnorm(n,a,b)&lt;/td&gt;
      &lt;td&gt;np.random.normal(a,b,n)&lt;/td&gt;
      &lt;td&gt;normrnd(a,b,1,n)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sequences&quot;&gt;Sequences&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;seq(a,b,by=c)&lt;/td&gt;
      &lt;td&gt;np.arange(a,b,c)&lt;/td&gt;
      &lt;td&gt;a:c:b&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;seq(a,b,length.out=c)&lt;/td&gt;
      &lt;td&gt;np.linspace(a,b,c)&lt;/td&gt;
      &lt;td&gt;linspace(a,b,c)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;repeating&quot;&gt;Repeating&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;th&gt;Matlab&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;rep(a,n)&lt;/td&gt;
      &lt;td&gt;np.repeat(a,n)&lt;/td&gt;
      &lt;td&gt;repmat(a,1,n)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a:b&lt;/td&gt;
      &lt;td&gt;a:b&lt;/td&gt;
      &lt;td&gt;a:b&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;working-directory&quot;&gt;Working directory&lt;/h2&gt;

&lt;p&gt;R  | Python | Matlab|Description
——-   | ——-| ——-| ——-
dir()| os.dir(“.”) |dir |  list files and folders
getwd|os.getwcd() | pwd | Display the current working directory
setwd|os.chdir(“folder”) | cd folder | Change the current working directory
ls()| dir() | who | list of loaded objects
rm(x)| del x| clear x | clear object x from memory
rm(list = ls())| see below|clear all |  clear all objects from memory&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for obj in dir(): 
    if obj[0] == '_': continue
    del globals()[obj]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;needed-python-library&quot;&gt;Needed Python library&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import math&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;import numpy as np&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;import pandas as pd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;More useful link:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://umaine.edu/mathematics/wp-content/uploads/sites/70/2018/08/matlabR.pdf&quot;&gt;Matlab / R&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mathesaurus.sourceforge.net/matlab-python-xref.pdf&quot;&gt;MATLAB commands in numerical Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;p&gt;Copyright (c) 2018 Saeid Amiri&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cheatsheet for markdown.</title>
   <link href="https://saeidamiri1.github.io/Test.github.io/blog/2019/02/01/markdown"/>
   <updated>2019-02-01T00:00:00-05:00</updated>
   <id>https://saeidamiri1.github.io/Test.github.io/blog/2019/02/01/markdown</id>
   <content type="html">&lt;h1 id=&quot;cheatsheet-for-markdown-basics&quot;&gt;Cheatsheet for markdown (Basics)&lt;/h1&gt;
&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#Heading-1&quot;&gt;Heading&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#emphasis&quot;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#link&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#list&quot;&gt;List&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#latex&quot;&gt;Latex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#image&quot;&gt;Image&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#foldable-text&quot;&gt;Foldable text&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#emoji-and-hotkey&quot;&gt;Emoji and Hotkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#miscellaneous&quot;&gt;miscellaneous&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#comment&quot;&gt;Comment&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#indent&quot;&gt;Indent&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#Footnotes&quot;&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#useful-link&quot;&gt;Useful link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Heading 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Heading 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Heading 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Heading 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Heading 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;emphasis&quot;&gt;Emphasis&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Italic text&lt;/em&gt;
How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; *Italic text* or _Italic text_
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bold text&lt;/strong&gt;
How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; **Bold text** or __Bold text__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;del&gt;Strikethrough&lt;/del&gt;
How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~Strikethrough~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;blockquote&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;blockquote
How:&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blockquote
blockquote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;Color&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span style=&quot;color:red&quot;&amp;gt;Color&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;link&quot;&gt;Link&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Link](http://www.google.com/)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;
&lt;p&gt;inline &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt;
multiple lines of &lt;code class=&quot;highlighter-rouge&quot;&gt;codes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; `code`   
    ```
       codes
    ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;list&quot;&gt;List&lt;/h1&gt;

&lt;p&gt;Unordered List&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bullet
    &lt;ul&gt;
      &lt;li&gt;sub bullet
        &lt;ul&gt;
          &lt;li&gt;Sub-sub bullet&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Bullet
    &lt;ul&gt;
      &lt;li&gt;sub bullet
        &lt;ul&gt;
          &lt;li&gt;Sub-sub bullet&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Unordered List
- Bullet
  - sub bullet
    - Sub-sub bullet
- Bullet
  - sub bullet
    - Sub-sub bullet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Numbered list
    &lt;ol&gt;
      &lt;li&gt;Sub numbered list&lt;/li&gt;
      &lt;li&gt;Sub numbered kist&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Numbered list
    1. Sub numbered list
    2. Sub numbered kist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Task List&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;An uncompleted task&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;A completed task&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- [ ] An uncompleted task
- [x] A completed task
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Horizontal line :&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;latex&quot;&gt;Latex&lt;/h1&gt;
&lt;p&gt;LATEX&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://latex.codecogs.com/svg.latex?E_0=mc^2&quot; alt=&quot;E_0=mc^2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tex.s2cms.ru/svg/E_0=mc^2&quot; alt=&quot;E_0=mc^2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![E_0=mc^2](https://latex.codecogs.com/svg.latex?E_0=mc^2)

&amp;lt;img src=&quot;https://tex.s2cms.ru/svg/E_0=mc^2&quot; alt=&quot;E_0=mc^2&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;table&quot;&gt;Table&lt;/h1&gt;
&lt;p&gt;Table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;header 1&lt;/th&gt;
      &lt;th&gt;header 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Row 1&lt;/td&gt;
      &lt;td&gt;Values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Row 2 &lt;br /&gt; continue&lt;/td&gt;
      &lt;td&gt;Values&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;header 1  | header 2
-------   | -------
Row 1     |  Values
Row 2 &amp;lt;br&amp;gt; continue    |  Values
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;image&quot;&gt;Image&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Image:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/saeidamiri1/saeidamiri1.github.io/master/public/favicon.ico&quot; alt=&quot;picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![picture](https://raw.githubusercontent.com/saeidamiri1/saeidamiri1.github.io/master/public/favicon.ico)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;foldable-text&quot;&gt;Foldable text&lt;/h1&gt;

&lt;details&gt;
&lt;summary&gt;Hidden materials&lt;/summary&gt;
&lt;p&gt; Put text here &lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;details&amp;gt;
&amp;lt;summary&amp;gt;Hidden materials&amp;lt;/summary&amp;gt;
&amp;lt;p&amp;gt; Put text here &amp;lt;/p&amp;gt;
&amp;lt;/details&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;emoji-and-hotkey&quot;&gt;Emoji and Hotkey&lt;/h1&gt;

&lt;p&gt;:+1:&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  :+1:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The complete list can be found at &lt;a href=&quot;https://www.webfx.com/tools/emoji-cheat-sheet/&quot;&gt;emoji list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hotkey:
&lt;kbd&gt;⌘C&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;kbd&amp;gt;⌘C&amp;lt;/kbd&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;common hotkey:
⌥(Option)⌃(Control)⌘(Command)⇧(Shift)⇪(Caps Lock)
⇥(Tab) ↩(Return) ⌫(Delete)↑(Up)↓(Down)←(Left)→ (right)&lt;/p&gt;

&lt;h1 id=&quot;miscellaneous&quot;&gt;miscellaneous&lt;/h1&gt;
&lt;h2 id=&quot;comment&quot;&gt;Comment&lt;/h2&gt;
&lt;!--
Does not show
--&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--
Does not show
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;indent&quot;&gt;indent&lt;/h2&gt;
&lt;p&gt;  with indent&lt;/p&gt;

&lt;p&gt;How:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;amp;nbsp; with indent 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;
&lt;p&gt;Need more [^1] to say.&lt;br /&gt;
[^1]: This is the Footnote.&lt;/p&gt;

&lt;h1 id=&quot;useful-references&quot;&gt;Useful references&lt;/h1&gt;
&lt;p&gt;-[ref1]:  https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&lt;/p&gt;

&lt;p&gt;If you are interested in using  R Markdown, [ref2] and [ref3] would be a good reference.&lt;br /&gt;
-[ref2] https://bookdown.org/yihui/rmarkdown/ 
&lt;br /&gt;
-[ref3] http://www.stat.cmu.edu/~cshalizi/rmarkdown/#numbered-lists&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#contents&quot;&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;license&quot;&gt;License&lt;/h3&gt;
&lt;p&gt;Copyright (c) 2019 Saeid Amiri&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
